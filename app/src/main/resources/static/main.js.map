{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-student/add-student.component.css","webpack:///./src/app/add-student/add-student.component.html","webpack:///./src/app/add-student/add-student.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/partner.service.ts","webpack:///./src/app/partner.ts","webpack:///./src/app/partnerlist/partnerlist.component.css","webpack:///./src/app/partnerlist/partnerlist.component.html","webpack:///./src/app/partnerlist/partnerlist.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/student-list/student-list.component.css","webpack:///./src/app/student-list/student-list.component.html","webpack:///./src/app/student-list/student-list.component.ts","webpack:///./src/app/student.service.ts","webpack:///./src/app/student.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1zdHVkZW50L2FkZC1zdHVkZW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h3>Create Student</h3>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\" >\\n    <div [hidden]=\\\"submitted\\\" style=\\\"width: 400px;\\\">\\n      <form [formGroup]=\\\"studentsaveform\\\" #savestudent (ngSubmit)=\\\"saveStudent(saveStudent)\\\">\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Student Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"student_name\\\" data-toggle=\\\"tooltip\\\" \\n                 data-placement=\\\"right\\\" title=\\\"Enter Student Name\\\" >\\n              <div class=\\\"alert alert-danger\\\" *ngIf = \\\"(StudentName.touched) && (StudentName.invalid)\\\" \\n                style=\\\"margin-top: 5px;\\\">\\n                  <span *ngIf=\\\"StudentName.errors.required\\\">Student Name is Required</span>\\n                    <span *ngIf = \\\"StudentName.errors.minlength\\\"> \\n                        MinLength Error \\n                    </span>                   \\n                </div>\\n          </div>\\n  \\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Student Email</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"student_email\\\" \\n                data-toggle=\\\"tooltip\\\" data-placement=\\\"right\\\" title=\\\"Enter Student Email\\\">\\n                <div class=\\\"alert alert-danger\\\" *ngIf = \\\"(StudentEmail.touched) && (StudentEmail.invalid)\\\" \\n                style=\\\"margin-top: 5px;\\\">\\n                  <span *ngIf=\\\"StudentEmail.errors.required\\\">Student Email is Required</span>\\n                    <span *ngIf = \\\"StudentEmail.errors.email\\\"> \\n                        Invalid Email Format \\n                    </span>                   \\n                </div>\\n          </div>\\n  \\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"branch\\\">Student Branch</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"student_branch\\\" data-toggle=\\\"tooltip\\\" \\n                      data-placement=\\\"right\\\" title=\\\"Select Student Branch\\\">\\n                    <option value=\\\"null\\\">--Select Branch--</option>\\n                  <option value=\\\"B-Tech\\\">B-Tech</option>\\n                  <option value=\\\"BCA\\\">BCA</option>\\n                  <option value=\\\"MCA\\\">MCA</option>\\n                  <option value=\\\"M-Tech\\\">M-Tech</option>\\n                </select>\\n          </div>\\n  \\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n      </form>\\n  </div>\\n  </div>\\n  <div class=\\\"col-sm-4\\\"></div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n      <div [hidden]=\\\"!submitted\\\">\\n         <h4>Student Added SuccessFully!</h4>\\n         <button (click)=\\\"addStudentForm()\\\" class='btn btn-primary'>Add More Student</button>\\n      </div>      \\n  </div>\\n  <div class=\\\"col-sm-4\\\"></div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { StudentService } from '../student.service';\nimport {FormControl,FormGroup,Validators} from '@angular/forms';\nimport { Student } from '../student';\n@Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.css']\n})\nexport class AddStudentComponent implements OnInit {\n\n  constructor(private studentservice:StudentService) { }\n\n  student : Student=new Student();\n  submitted = false;\n\n  ngOnInit() {\n    this.submitted=false;\n  }\n\n  studentsaveform=new FormGroup({\n    student_name:new FormControl('' , [Validators.required , Validators.minLength(5) ] ),\n    student_email:new FormControl('',[Validators.required,Validators.email]),\n    student_branch:new FormControl()\n  });\n\n  saveStudent(saveStudent){\n    this.student=new Student();   \n    this.student.student_name=this.StudentName.value;\n    this.student.student_email=this.StudentEmail.value;\n    this.student.student_branch=this.StudentBranch.value;\n    this.submitted = true;\n    this.save();\n  }\n\n  \n\n  save() {\n    this.studentservice.createStudent(this.student)\n      .subscribe(data => console.log(data), error => console.log(error));\n    this.student = new Student();\n  }\n\n  get StudentName(){\n    return this.studentsaveform.get('student_name');\n  }\n\n  get StudentEmail(){\n    return this.studentsaveform.get('student_email');\n  }\n\n  get StudentBranch(){\n    return this.studentsaveform.get('student_branch');\n  }\n\n  addStudentForm(){\n    this.submitted=false;\n    this.studentsaveform.reset();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\nimport { PartnerlistComponent } from './partnerlist/partnerlist.component';\nimport { StudentListComponent } from './student-list/student-list.component';\nimport { AddStudentComponent } from './add-student/add-student.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'view-student', pathMatch: 'full' },\n  { path: 'view-student', component: StudentListComponent },\n  { path: 'add-student', component: AddStudentComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"    <div  class=\\\"container-fluid\\\">\\r\\n    <nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark\\\">\\r\\n        <ul class=\\\"navbar-nav\\\">\\r\\n          <li class=\\\"nav-item \\\">\\r\\n            <a routerLink=\\\"view-student\\\" class=\\\"nav-link\\\" class=\\\"btn btn-primary active\\\" role=\\\"button\\\" >View Student</a>\\r\\n          </li>&nbsp;\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a  routerLink=\\\"add-student\\\" class=\\\"nav-link\\\" class=\\\"btn btn-primary active\\\" role=\\\"button\\\" >Add Student</a>\\r\\n          </li>          \\r\\n        </ul>\\r\\n      </nav>   \\r\\n        <router-outlet></router-outlet>\\r\\n    </div>\\r\\n    \"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FormSubmit';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PartnerlistComponent } from './partnerlist/partnerlist.component';\nimport {DataTablesModule} from 'angular-datatables';\nimport { StudentListComponent } from './student-list/student-list.component';\nimport { AddStudentComponent } from './add-student/add-student.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    PartnerlistComponent,\n    StudentListComponent,\n    AddStudentComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    DataTablesModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Partner } from './partner';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PartnerService {\n  private baseUrl = 'http://localhost:8080/api/';\n\n  constructor(private http:HttpClient) { }\n\n  createPartner(partner: object): Observable<object> {\n    return this.http.post(`${this.baseUrl}`, partner);\n  }\n\n  getPartnerList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`+'partner-list');\n  }\n\n  deletePartner(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/partner-delete/${id}`, { responseType: 'text' });\n  }\n}\n","export class Partner {\n    id:number;\n    partnerName:String;\n    partnerEmail:String;\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcnRuZXJsaXN0L3BhcnRuZXJsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \" <div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">\\n      <h1>Partners</h1>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n      <table datatable [dtOptions]=\\\"dtOptions\\\"\\n      [dtTrigger]=\\\"dtTrigger\\\"   class=\\\"row-border hover\\\" >\\n          <thead>\\n              <tr>\\n                  <th>Partner Name</th>\\n                  <th>Partner Email</th>\\n                  <th>Partner Email</th>\\n                  \\n              </tr>\\n          </thead>\\n          <tbody>\\n              <tr *ngFor=\\\"let partner of partners \\\">\\n                  <td>{{partner.partnerName}}</td>\\n                  <td>{{partner.partnerEmail}}</td>\\n                  <td><button (click)=\\\"deletePartner(partner.id)\\\" class='btn btn-primary'>Delete</button></td>\\n              </tr>\\n          </tbody>\\n      </table>\\n  </div>\\n</div> \\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Partner } from '../partner';\nimport {  Subject } from \"rxjs\";\nimport { PartnerService } from '../partner.service';\n\n@Component({\n  selector: 'app-partnerlist',\n  templateUrl: './partnerlist.component.html',\n  styleUrls: ['./partnerlist.component.css']\n})\nexport class PartnerlistComponent implements OnInit {\n  partners: any[] = [];\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any>= new Subject();\n\n  constructor(private partnerservice:PartnerService) { }\n\n  ngOnInit() {  \n    \n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      processing: true\n    };\n    this.partnerservice.getPartnerList().subscribe(data => {\n      this.partners = data;\n      this.dtTrigger.next();\n    });\n  }\n\n  // reloadData() {\n  //   this.partners=this.partnerservice.getPartnerList();\n  // }\n\n  \n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h3>Registration Form</h3>\\n<form [formGroup]=\\\"form\\\" #registerform (ngSubmit)=\\\"register(registerform)\\\">\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-2\\\"></div>\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Partner Name</label> <input\\n          type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"partnerName\\\" \\n          aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Name\\\">\\n        <!--  <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small> -->\\n      </div>\\n    </div>  \\n    <div class=\\\"col-sm-2\\\"></div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-2\\\"></div>\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Partner Email</label> <input\\n          type=\\\"text\\\" class=\\\"form-control\\\" \\n          aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Email\\\" formControlName=\\\"partnerEmail\\\">\\n        <!--  <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small> -->\\n      </div>\\n    </div>  \\n    <div class=\\\"col-sm-2\\\"></div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-2\\\"></div>\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary\\\">Submit</button>\\n      </div>\\n    </div>  \\n    <div class=\\\"col-sm-2\\\"></div>\\n</div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl,FormGroup,Validators} from '@angular/forms';\nimport { from } from 'rxjs';\nimport { Partner } from '../partner';\nimport { PartnerService } from '../partner.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private partnerService:PartnerService) { }\n\n  ngOnInit() {\n  }\n\n  partner : Partner=new Partner();\n  submitted = false;\n\n  form=new FormGroup({\n    partnerName:new FormControl(),\n    partnerEmail:new FormControl()\n  });\n\n  register(registerform){\n    // console.log(this.partnerName.value);\n    // console.log(this.partnerEmail.value);\n\n    this.partner=new Partner();\n    this.partner.partnerName=this.partnerName.value;\n    this.partner.partnerEmail=this.partnerEmail.value;\n    this.submitted=true;\n    this.save();\n  }\n\n  save() {\n    this.partnerService.createPartner(this.partner)\n      .subscribe(data => console.log(data), error => console.log(error));\n    this.partner = new Partner();\n  }\n\n  get partnerName(){\n    return this.form.get('partnerName');\n  }\n\n  get partnerEmail(){\n    return this.form.get('partnerEmail');\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0dWRlbnQtbGlzdC9zdHVkZW50LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">\\n      <h1 style=\\\"text-align: center\\\">Students</h1><br>\\n      <div class=\\\"row\\\" [hidden]=\\\"!deleteMessage\\\">\\n           \\n                <div class=\\\"col-sm-4\\\"></div>\\n                <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"alert alert-info alert-dismissible\\\">\\n                                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n                                <strong>Student Data Deleted</strong>\\n                        </div>\\n                </div>\\n                <div class=\\\"col-sm-4\\\"></div>\\n        </div>           \\n    </div>\\n\\n  \\n  <div class=\\\"panel-body\\\">\\n      <table  class=\\\"table table-hover table-sm\\\" datatable [dtOptions]=\\\"dtOptions\\\"\\n      [dtTrigger]=\\\"dtTrigger\\\"  >\\n          <thead class=\\\"thead-light\\\">\\n              <tr>\\n                  <th>Student Name</th>\\n                  <th>Student Email</th>\\n                  <th>Student Branch</th>\\n                  <th>Action</th>\\n                  \\n              </tr>\\n          </thead>\\n          <tbody>\\n               <tr *ngFor=\\\"let student of students \\\">\\n                  <td>{{student.student_name}}</td>\\n                  <td>{{student.student_email}}</td>\\n                  <td>{{student.student_branch}}</td>\\n                  <td><button (click)=\\\"deleteStudent(student.student_id)\\\" class='btn btn-primary'><i class=\\\"fa fa-futboll-0\\\">Delete</i></button>&nbsp;\\n                    <button (click)=\\\"updateStudent(student.student_id)\\\" class='btn btn-info'\\n                    data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">Update</button>\\n                  </td>\\n                </tr> \\n          </tbody><br>\\n      </table>\\n  </div>\\n</div> \\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n        <div class=\\\"modal-dialog\\\">\\n          <div class=\\\"modal-content\\\">\\n                <form [formGroup]=\\\"studentupdateform\\\" #updstu (ngSubmit)=\\\"updateStu(updstu)\\\">\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\" style=\\\"text-align: center\\\">Update Student</h4>\\n              \\n            </div>\\n            \\n            <!-- Modal body -->\\n            <div class=\\\"modal-body\\\" *ngFor=\\\"let student of studentlist \\\" >\\n                <div [hidden]=\\\"isupdated\\\">\\n\\n                    <input type=\\\"hidden\\\" class=\\\"form-control\\\"  formControlName=\\\"student_id\\\" [(ngModel)]=\\\"student.student_id\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\">Student Name</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"student_name\\\" [(ngModel)]=\\\"student.student_name\\\"  >\\n                            </div>\\n                    \\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\">Student Email</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"student_email\\\" [(ngModel)]=\\\"student.student_email\\\">\\n                            </div>\\n                    \\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\">Student Branch</label>\\n                                  <select class=\\\"form-control\\\" formControlName=\\\"student_branch\\\" required>                                   \\n                                    <option value=\\\"B-Tech\\\" [selected]=\\\"'B-Tech' == student.student_branch\\\">B-Tech</option>\\n                                    <option value=\\\"BCA\\\" [selected]=\\\"'BCA' == student.student_branch\\\">BCA</option>\\n                                    <option value=\\\"MCA\\\" [selected]=\\\"'MCA' == student.student_branch\\\" >MCA</option>\\n                                    <option value=\\\"M-Tech\\\" [selected]=\\\"'M-Tech' == student.student_branch\\\">M-Tech</option>\\n                                  </select>                               \\n                            </div>                   \\n                  </div>  \\n                  <div [hidden]=\\\"!isupdated\\\">\\n                      <h4>Student Detail Updated!</h4>\\n                  </div>        \\n                    \\n            </div>\\n            \\n            <!-- Modal footer -->\\n            <div class=\\\"modal-footer\\\" >\\n              <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [hidden]=\\\"isupdated\\\">Update</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\" (click)=\\\"changeisUpdate()\\\">Close</button>\\n            </div>\\n            \\n        </form>\\n          </div>\\n        </div>\\n      </div>\"","import { Component, OnInit } from '@angular/core';\nimport { StudentService } from '../student.service';\nimport { Student } from '../student';\nimport { Observable,Subject } from \"rxjs\";\n\nimport {FormControl,FormGroup,Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.css']\n})\nexport class StudentListComponent implements OnInit {\n\n constructor(private studentservice:StudentService) { }\n\n  studentsArray: any[] = [];\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any>= new Subject();\n\n\n  students: Observable<Student[]>;\n  student : Student=new Student();\n  deleteMessage=false;\n  studentlist:any;\n  isupdated = false;    \n \n\n  ngOnInit() {\n    this.isupdated=false;\n    this.dtOptions = {\n      pageLength: 6,\n      stateSave:true,\n      lengthMenu:[[6, 16, 20, -1], [6, 16, 20, \"All\"]],\n      processing: true\n    };   \n    this.studentservice.getStudentList().subscribe(data =>{\n    this.students =data;\n    this.dtTrigger.next();\n    })\n  }\n  \n  deleteStudent(id: number) {\n    this.studentservice.deleteStudent(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.deleteMessage=true;\n          this.studentservice.getStudentList().subscribe(data =>{\n            this.students =data\n            })\n        },\n        error => console.log(error));\n  }\n\n\n  updateStudent(id: number){\n    this.studentservice.getStudent(id)\n      .subscribe(\n        data => {\n          this.studentlist=data           \n        },\n        error => console.log(error));\n  }\n\n  studentupdateform=new FormGroup({\n    student_id:new FormControl(),\n    student_name:new FormControl(),\n    student_email:new FormControl(),\n    student_branch:new FormControl()\n  });\n\n  updateStu(updstu){\n    this.student=new Student(); \n   this.student.student_id=this.StudentId.value;\n   this.student.student_name=this.StudentName.value;\n   this.student.student_email=this.StudentEmail.value;\n   this.student.student_branch=this.StudentBranch.value;\n   console.log(this.StudentBranch.value);\n   \n\n   this.studentservice.updateStudent(this.student.student_id,this.student).subscribe(\n    data => {     \n      this.isupdated=true;\n      this.studentservice.getStudentList().subscribe(data =>{\n        this.students =data\n        })\n    },\n    error => console.log(error));\n  }\n\n  get StudentName(){\n    return this.studentupdateform.get('student_name');\n  }\n\n  get StudentEmail(){\n    return this.studentupdateform.get('student_email');\n  }\n\n  get StudentBranch(){\n    return this.studentupdateform.get('student_branch');\n  }\n\n  get StudentId(){\n    return this.studentupdateform.get('student_id');\n  }\n\n  changeisUpdate(){\n    this.isupdated=false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class StudentService {\n\n  private baseUrl = 'http://localhost:8080/api/';\n\n  constructor(private http:HttpClient) { }\n\n  getStudentList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`+'students-list');\n  }\n\n  createStudent(student: object): Observable<object> {\n    return this.http.post(`${this.baseUrl}`+'save-student', student);\n  }\n\n  deleteStudent(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/delete-student/${id}`, { responseType: 'text' });\n  }\n\n  getStudent(id: number): Observable<Object> {\n    return this.http.get(`${this.baseUrl}/student/${id}`);\n  }\n\n  updateStudent(id: number, value: any): Observable<Object> {\n    return this.http.post(`${this.baseUrl}/update-student/${id}`, value);\n  }\n  \n}                                           ","export class Student {\n\n    student_id:number;\n    student_name:String;\n    student_email:String;\n    student_branch=String;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}